{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditRollForm.js","components/Inventory.js","sample-rolls.js","components/Roll.js","base.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","formInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","required","ref","placeholder","defaultValue","Component","Header","tagline","age","Order","renderOrder","key","roll","rolls","count","order","isAvailable","status","name","price","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addRolls","currentTarget","reset","EditRollForm","handleChange","console","log","updatedRoll","updateRoll","index","onChange","Inventory","onClick","loadSampleRolls","roll1","roll2","roll3","roll4","roll5","roll6","roll7","roll8","roll9","Roll","handleClick","addToOrder","details","src","alt","disabled","base","firebase","initializeApp","apiKey","authDomain","databaseURL","Rebase","createClass","database","App","state","Date","now","setState","sampleRolls","params","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","syncState","context","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.09ad14f9.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  formInput = React.createRef();\n\n  goToStore = e => {\n    // 1. stop form from submitting\n    e.preventDefault();\n    // 2. get data from the form\n    const storeName = this.formInput.current.value;\n    // 3. change the page with push state\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          required\n          ref={this.formInput}\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store -></button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React, { Component } from \"react\";\n\nconst Header = ({ tagline, age }) => (\n  <header className=\"top\">\n    <h1>\n      Sushi\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n);\n\n// class Header extends Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Sushi\n//           <span className=\"ofThe\">\n//             <span className=\"of\">Of</span>\n//             <span className=\"the\">The</span>\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nclass Order extends Component {\n  renderOrder = key => {\n    const roll = this.props.rolls[key];\n    const count = this.props.order[key];\n    const isAvailable = roll && roll.status === \"available\";\n    // make sure the rolls are loaded before continuing\n    if (!roll) return null;\n    if (!isAvailable) {\n      return (\n        <li key={key}>\n          Sorry {roll ? roll.name : \"roll\"} is no longer available\n        </li>\n      );\n    }\n    return (\n      <li key={key}>\n        {count} lbs {roll.name}\n        {formatPrice(count * roll.price)}\n      </li>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const roll = this.props.rolls[key];\n      const count = this.props.order[key];\n      const isAvailable = roll && roll.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * roll.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <ul className=\"order\">{orderIds.map(this.renderOrder)}</ul>\n\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = e => {\n    // 1. stop form from submitting\n    e.preventDefault();\n    const roll = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addRolls(roll);\n    // 2. refresh the form\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"sushi-edit\" onSubmit={this.createFish}>\n        <input type=\"text\" ref={this.nameRef} name=\"name\" placeholder=\"name\" />\n        <input\n          type=\"text\"\n          ref={this.priceRef}\n          name=\"price\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          type=\"text\"\n          ref={this.imageRef}\n          name=\"Image\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\"> + Add Roll</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\n\nclass EditRollForm extends React.Component {\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    // update that roll\n    // 1. take a copy of the current roll\n    const updatedRoll = {\n      ...this.props.roll,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n    this.props.updateRoll(this.props.index, updatedRoll);\n  };\n  render() {\n    return (\n      <div className=\"sushi-edit\">\n        <input\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.roll.name}\n          name=\"name\"\n        />\n        <input\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.roll.price}\n          name=\"price\"\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.roll.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.roll.desc}\n        />\n        <input\n          type=\"image\"\n          onChange={this.handleChange}\n          value={this.props.roll.image}\n          name=\"Image\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default EditRollForm;\n","import React, { Component } from \"react\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditRollForm from \"./EditRollForm\";\n\nclass Inventory extends Component {\n  render() {\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {Object.keys(this.props.rolls).map(key => (\n          <EditRollForm\n            key={key}\n            index={key}\n            roll={this.props.rolls[key]}\n            updateRoll={this.props.updateRoll}\n          />\n        ))}\n        <AddFishForm addRolls={this.props.addRolls} />\n        <button onClick={this.props.loadSampleRolls}>Load Sample Rolls</button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst rolls = {\n  roll1: {\n    name: \"Spider Roll\",\n    image: \"/images/spider.jpeg\",\n    desc:\n      \"Contains: tempura soft-shell crab, avocado, cucumber, and spicy mayo\",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll2: {\n    name: \"Rainbow Roll\",\n    image: \"/images/rainbow.jpg\",\n    desc:\n      \"Contains: imitation crab, avocado, cucumber, tuna, salmon, shrimp, yellowtail \",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll3: {\n    name: \"California Roll\",\n    image: \"/images/california.jpg\",\n    desc: \"Contains: Imitation crab, avocado, cucumber\",\n    price: 299,\n    status: \"unavailable\"\n  },\n\n  roll4: {\n    name: \"Spicy Tuna Roll\",\n    image: \"/images/spicytuna.jpg\",\n    desc: \"Contains: tuna, spicy mayo\",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll5: {\n    name: \"Shrimp Tempura Roll\",\n    image: \"/images/shrimptempura.jpg\",\n    desc: \"Contains: shrimp tempura, avocado, eel sauce\",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll6: {\n    name: \"Boston Roll\",\n    image: \"/images/bostonroll.jpg\",\n    desc: \"Contains: shrimp, avocado, cucumber \",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll7: {\n    name: \"Dragon Roll\",\n    image: \"/images/dragon.jpg\",\n    desc: \"Contains: eel, crab sticks, avocado, cucumber, eel sauce \",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll8: {\n    name: \"King Grab Roll\",\n    image: \"/images/kingcrab.jpg\",\n    desc: \"Contains: King Crab, mayonnaise\",\n    price: 299,\n    status: \"available\"\n  },\n\n  roll9: {\n    name: \"Philadelphia Roll\",\n    image: \"/images/philly.jpg\",\n    desc: \"Contains: salmon, avocado, cream cheese\",\n    price: 299,\n    status: \"available\"\n  }\n};\n\nexport default rolls;\n","import React, { Component } from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nclass Roll extends Component {\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-roll\">\n        <img src={image} alt={name} />\n        <h3 className=\"roll-name\">\n          {name}\n          <span>{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Roll;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDRIo_XgPqSJslkSFtdLvFJF8HOM9EIlGc\",\n  authDomain: \"sushi-sunday.firebaseapp.com\",\n  databaseURL: \"https://sushi-sunday.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebase.database());\n\n// Named export\nexport { firebaseApp };\n\n// default export\nexport default base;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleRolls from \"../sample-rolls\";\nimport Roll from \"./Roll\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    rolls: {},\n    order: {}\n  };\n\n  // ===== Lifecycle methods =========//\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/rolls`, {\n      context: this,\n      state: \"rolls\"\n    });\n  }\n\n  // to prevent memory leaks\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  // === end lifecycle methods === ///\n\n  addRolls = roll => {\n    // 1. Take a copy of the existing state\n    const rolls = { ...this.state.rolls };\n    // 2. Add our new rolls to that rolls variable\n    rolls[`fish${Date.now()}`] = roll;\n    // 3. Set the new rolls object to state\n    this.setState({ rolls });\n  };\n\n  updateRoll = (key, updatedRoll) => {\n    this.setState({ rolls: sampleRolls });\n    // 1. Take a copy of the current state\n    const rolls = { ...this.state.rolls };\n    // 2. update that state\n    rolls[key] = updatedRoll;\n    // 3. set that to state\n    this.setState({ rolls });\n  };\n\n  loadSampleRolls = () => {\n    this.setState({ rolls: sampleRolls });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of the state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"sushi-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Sushi Sunday\" age={100} />\n          <ul className=\"rolls\">\n            {Object.keys(this.state.rolls).map(key => (\n              <Roll\n                key={key}\n                index={key}\n                details={this.state.rolls[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order rolls={this.state.rolls} order={this.state.order} />\n        <Inventory\n          addRolls={this.addRolls}\n          updateRoll={this.updateRoll}\n          loadSampleRolls={this.loadSampleRolls}\n          rolls={this.state.rolls}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found, no sushi 4 u :(</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}